#!/usr/bin/env bash

DIR="${DOTFILES_DIR-.dotfiles}"
DOTFILES="$HOME/$DIR"
GIT_REPO="${DOTFILES_GIT_REPO-craveytrain/dotfiles}"

# Symlink all the things!
symlinks=(
  "ackrc"
  "bash/bash_profile"
  "bash/bashrc"
  "dir_colors"
  "editorconfig"
  "esformatter"
  "eslintrc.yaml"
  "eslintignore"
  "gitconfig"
  "gitignore_global"
  "gvimrc"
  "hgignore_global"
  "stylelintrc.yaml"
  "vim"
  "vimrc"
  "zprezto/runcoms/zlogin"
  "zprezto/runcoms/zpreztorc"
  "zprezto/runcoms/zprofile"
  "zprezto/runcoms/zshenv"
  "zprezto/runcoms/zshrc"
)

# Grab dotfiles if they aren't already installed
if [ ! -d "$DOTFILES" ]; then
  # Prefer git clone
  if hash git 2>/dev/null; then
    # Clone git repo if not already there
    git clone --recursive "git://github.com/$GIT_REPO.git" "$DOTFILES"
  else
    # If curl not found, give up
    hash curl 2>/dev/null || { echo >&2 "Curl not found, giving up."; exit 1; }

    echo "Git not found. Copying instead."
    mkdir "$DIR";
    curl -L "https://github.com/$GIT_REPO/tarball/master" | tar zx -C "$DIR" --strip-components 1
  fi
fi

for file in "${symlinks[@]}"; do
  NEW_FILE="$HOME/.$(basename $file)"

  # If the file already exists (just not a symlink), back it up
  if [ -e "$NEW_FILE" ]; then
    if [ -L "$NEW_FILE" ]; then
      rm "$NEW_FILE"
    else
      BASE="$(basename $NEW_FILE)"
      echo "Backup: $BASE => ${BASE#.}.backup"
      mv "$NEW_FILE" "$HOME/${BASE#.}.backup"
    fi
  fi

  # Symlink the file, replacing the old one
  echo "Symlink: $NEW_FILE -> $DOTFILES/$file";
  ln -s "$DOTFILES/$file" "$NEW_FILE"
done

echo "Please restart your shell"

exit 0;
