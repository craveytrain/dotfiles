#!/usr/bin/env bash

DIR="${DOTFILES_DIR-.dotfiles}"
DOTFILES="$HOME/$DIR"
GIT_REPO="${DOTFILES_GIT_REPO-craveytrain/dotfiles}"

# Symlink all the things!
declare -A symlinks
symlinks["ackrc"]=
symlinks["bash/bash_profile"]=
symlinks["bash/bashrc"]=
symlinks["dir_colors"]=
symlinks["editorconfig"]=
symlinks["esformatter"]=
symlinks["eslintrc.yaml"]=
symlinks["eslintignore"]=
symlinks["gitconfig"]=
symlinks["gitignore_global"]=
symlinks["gvimrc"]=
symlinks["hgignore_global"]=
symlinks["stylelintrc.yaml"]=
symlinks["vim"]=
symlinks["vimrc"]=
symlinks["zprezto/runcoms/zlogin"]=
symlinks["zprezto/runcoms/zpreztorc"]=
symlinks["zprezto/runcoms/zprofile"]=
symlinks["zprezto/runcoms/zshenv"]=
symlinks["zprezto/runcoms/zshrc"]=

# Grab dotfiles if they aren't already installed
if [ ! -d "$DOTFILES" ]; then
  # Prefer git clone
  if hash git 2>/dev/null; then
    # Clone git repo if not already there
    git clone --recursive "git://github.com/$GIT_REPO.git" "$DOTFILES"
  else
    # If curl not found, give up
    hash curl 2>/dev/null || { echo >&2 "Curl not found, giving up."; exit 1; }

    echo "Git not found. Copying instead."
    mkdir "$DIR";
    curl -L "https://github.com/$GIT_REPO/tarball/master" | tar zx -C "$DIR" --strip-components 1
  fi
fi

for src in "${!symlinks[@]}"; do
  NEW_FILE="$HOME/${symlinks[$src]:-.$(basename $src)}"
  DIR="$(dirname $NEW_FILE)"

  # If the file already exists (just not a symlink), back it up
  if [ -e "$NEW_FILE" ] && [ ! -L "$NEW_FILE" ]; then
    BASE="$(basename $NEW_FILE)"
    echo "Backup: $BASE -> ${BASE#.}.backup"
    mv "$NEW_FILE" "$DIR/${BASE#.}.backup"
  fi

  # If the diretory for the file does't not exist, create it
  if [ ! -d $DIR ]; then
    mkdir -p $DIR
  fi

  # if directory, remove it so it will be created again
  if [ -d "$NEW_FILE" ]; then
    rm "$NEW_FILE"
  fi

  # Symlink the file, replacing the old one
  ln -fs "$DOTFILES/$src" "$NEW_FILE"
done

echo "Please restart your shell"

exit 0;
