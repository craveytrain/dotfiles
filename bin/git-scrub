#!/usr/bin/env bash
# git-scrub
#
# Author: Rob Miller <rob@bigfish.co.uk>
# Adapted from the original by Yorick Sijsling

git checkout master &> /dev/null

# Make sure we're working with the most up-to-date version of master.
git fetch

# Prune obsolete remote tracking branches. These are branches that we
# once tracked, but have since been deleted on the remote.
git remote prune origin
ORPHANED_LOCAL_BRANCHES=`git branch -vv --color=never | grep 'origin/.*: gone]' | awk '{print $1}'`
if [ "$ORPHANED_LOCAL_BRANCHES" ]; then
	echo "Local orphaned branches:"
	echo $ORPHANED_LOCAL_BRANCHES | tr " " "\n"

	read -p "Force delete (y/N)? "
	if [ "$REPLY" == "y" ]; then
		git br -D $ORPHANED_LOCAL_BRANCHES
	fi
fi

# List all the branches that have been merged fully into master, and
# then delete them. We use the remote master here, just in case our
# local master is out of date.

MERGED_ON_REMOTE=`git branch --color=never --merged origin/master | grep -v "\*"`

if [ "$MERGED_ON_REMOTE" ]; then
	echo "The following remote branches are fully merged and will be removed:"
	echo $MERGED_ON_REMOTE | tr " " "\n"

	read -p "Continue (y/N)? "
	if [ "$REPLY" == "y" ]; then
    git br -d $MERGED_ON_REMOTE
    git push origin --delete $MERGED_ON_REMOTE
	fi
fi
